#compdef i

local subcmds=(i)
local current=$CURRENT
local i=1

while (( ++i < CURRENT )); do
  local w=$words[$i]
  if [ "$w[1]" = '-' ] ; then
    local option_arg_count=$(
      $subcmds help | \
        sed -nE "s/^  -$w[-1]([^-]*)--.*$/\1/p" | \
        wc -w)
    (( i += option_arg_count ))
    test $i -ge $CURRENT && return # current is option-argument
    (( current -= 1 + option_arg_count ))
    continue
  fi
  local arg_type="$($subcmds help -a | awk "/^  $w/{print \$2}")"
  if [ "$arg_type" != CMD ] ; then
    local last_command=$w
    break
  fi
  subcmds+=($w)
done

if (( $#subcmds + 1 >= $current )) ; then
  local cmds=("${(@f)$(
    ${subcmds} help -a | sed -nEe 's#^  ([^ ]*)[^-]*-- (.*)#\1[\2]#p'
  )}")
  _values "$subcmds command" $cmds
else
  local current_argument_pos=$(( $current - $#subcmds ))
  local argument_type=$(
    $subcmds help -a |
      sed -nE "s/^  ($last_command.* [^ ]+) +--.*$/\1/p" |
      awk "{ \
        if(NF <= $current_argument_pos) print tolower(\$NF) ; \
        else print tolower(\$$current_argument_pos) \
      }" |
      tr _ - | tr -d \[ | tr -d \]
  )
  if [ "$(echo "$argument_type" | wc -l)" = 1 ] ; then
    if [ "$argument_type" = file ] ; then
      _files
    elif [ -n "$argument_type" ] ; then
      local completions=($(${subcmds} _list-${argument_type}s))
      _describe "$argument_type" completions
    fi
  fi
fi
