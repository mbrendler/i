#compdef i

local subcmds=( $words[1] )
local current=$CURRENT
local i=1
local last_command=
local arg_types=

while (( ++i < CURRENT )); do
  local w=$words[$i]
  if [ "$w[1]" = '-' ] ; then
    local option_args=($(
      $subcmds help "$last_command" | sed -nE "s/^  -${w[-1]}([^-]*)--.*$/\1/p"
    ))
    (( i += $#option_args ))
    (( $i >= $CURRENT )) && return # current is argument for option
    (( current -= 1 + $#option_args ))
  else
    test -n "$last_command" && break
    IFS=$'\n' local arg_types_=(
      $($subcmds help -a | sed -nE "s/^  ($w.* [^ ]+) +--.*\$/\1/p")
    )
    (( $#arg_types_ > 1 )) && return
    arg_types=( $(echo ${arg_types_}) )
    if [ "${arg_types[2]}" = CMD ] ; then
      subcmds+=($w)
    else
      local last_command=$w
    fi
  fi
done

if (( $#subcmds + 1 >= $current )) ; then
  # completion for sub-commands
  local cmds=("${(@f)$(
    ${subcmds} help -a | sed -nE 's/^  ([^ ]*).*-- (.*)/\1[\2]/p'
  )}")
  _values "$subcmds command" $cmds
else
  local current_argument_pos=$(( $current - $#subcmds ))
  local argument_type="${arg_types[$current_argument_pos]}"
  if [ -z "$argument_type" ] && [[ "$arg_types[-1]" =~ '\.\..$' ]] ; then
    local argument_type="${arg_types[-1]}"
  fi
  argument_type="${argument_type#\[}"
  argument_type="${argument_type%\]}"
  if [[ "$argument_type" =~ "\||-" ]] ; then
    # completion for inline sub-commands
    local completions=($(echo "$argument_type" | tr \| \ ))
    _describe "$argument_type" completions
  elif [ -n "$argument_type" ] ; then
    local argument_type="${argument_type:l}"
    argument_type="${argument_type%...}"
    argument_type="${argument_type:s/_/-/}"
    if [ "$argument_type" = file ] ; then
      # complete file-paths
      _files
    elif [ "$argument_type" = shell-cmd ] ; then
      # complete unix-commands
      local PWD="$($words[1] dir $words[$i])"
      local words=( ${words:$i} )
      (( CURRENT -= i ))
      _normal
    elif [[ $argument_type =~ ^cmd-args- ]] ; then
      # complete arguments for unix-commands
      local shell_cmd="${argument_type#cmd-args-}"
      shift words (( i - 1 ))
      (( CURRENT -= i - 2 ))
      words[1]=$shell_cmd
      _normal
    else
      # complete arguments
      IFS=$'\n' local completions=($(${subcmds} _list-${argument_type}s 2> /dev/null))
      _describe "$argument_type" completions
    fi
  fi
fi
