#compdef i p

local subcmds=( $words[1] )
local current=$CURRENT
local i=1
local last_command=

while (( ++i < CURRENT )); do
  local w=$words[$i]
  if [ "$w[1]" = '-' ] ; then
    local option_args=($(
      $subcmds help "$last_command" | sed -nE "s/^  -$w[-1]([^-]*)--.*$/\1/p"
    ))
    (( i += $#option_args ))
    test $i -ge $CURRENT && return # current is option-argument
    (( current -= 1 + $#option_args ))
  else
    test -n "$last_command" && break
    local arg_type="$($subcmds help -a | awk "/^  $w/{print \$2}")"
    if [ "$arg_type" != CMD ] ; then
      local last_command=$w
    else
      subcmds+=($w)
    fi
  fi
done

if (( $#subcmds + 1 >= $current )) ; then
  local cmds=("${(@f)$(
    ${subcmds} help -a | sed -nE 's/^  ([^ ]*)[^-]*-- (.*)/\1[\2]/p'
  )}")
  _values "$subcmds command" $cmds
else
  local current_argument_pos=$(( $current - $#subcmds ))
  local argument_type=($(
    $subcmds help -a 2> /dev/null |
      sed -nE "s/^  ($last_command.* [^ ]+) +--.*$/\1/p" |
      awk "{ \
        if(NF <= $current_argument_pos) print tolower(\$NF) ; \
        else print tolower(\$$current_argument_pos) \
      }" |
      tr _ - | tr -d \[ | tr -d \]
  ))
  if [ "$#argument_type" = 1 ] ; then
    if [ "$argument_type" = file ] ; then
      _files
    elif [ -n "$argument_type" ] ; then
      local completions=($(${subcmds} _list-${argument_type}s 2> /dev/null))
      _describe "$argument_type" completions
    fi
  fi
fi
